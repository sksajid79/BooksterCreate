version: '3.8'

# Simplified production Docker Compose for MyBookStore
# Optimized for easy Ubuntu self-hosting deployment

services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - DATABASE_URL=${DATABASE_URL:-postgresql://postgres:mybookstore_secure_password@db:5432/mybookstore}
      - PGHOST=${PGHOST:-db}
      - PGPORT=${PGPORT:-5432}
      - PGUSER=${PGUSER:-postgres}
      - PGPASSWORD=${PGPASSWORD:-mybookstore_secure_password}
      - PGDATABASE=${PGDATABASE:-mybookstore}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_here}
      - SESSION_SECRET=${SESSION_SECRET:-your_session_secret_here}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    volumes:
      - ./exports:/app/exports
    networks:
      - mybookstore-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:5000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${PGDATABASE:-mybookstore}
      - POSTGRES_USER=${PGUSER:-postgres}
      - POSTGRES_PASSWORD=${PGPASSWORD:-mybookstore_secure_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    restart: unless-stopped
    networks:
      - mybookstore-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PGUSER:-postgres} -d ${PGDATABASE:-mybookstore}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    # Only expose port for debugging (comment out in production)
    # ports:
    #   - "5432:5432"

  # Optional: Nginx reverse proxy (uncomment for production with SSL)
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf:ro
  #     - ./ssl:/etc/nginx/ssl:ro
  #   depends_on:
  #     - app
  #   restart: unless-stopped
  #   networks:
  #     - mybookstore-network

volumes:
  postgres_data:
    driver: local

networks:
  mybookstore-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16